function LIT_A123_v1_0(Tinf,Cpel,Cpcc,keff,h1,ku,keref,alfa_ke,i0ref,Ei0,DS,Vinit)

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Users/howiechu/Desktop/Model/Celli/SOC30/Transient');

model.label('A123_091018.mph');

model.param.set('Lcc', '0.4[mm]', 'Current collector thickness');
model.param.set('Lx', '2.7[mm]', 'Electrode thickness');
model.param.set('Ly', '150[mm]', 'Electrode width');
model.param.set('Lz', '200[mm]', 'Electrode height');
model.param.set('Wtab', '48[mm]', 'Tab width');
model.param.set('Htab', '25[mm]', 'Tab height');
model.param.set('Ltab', '0.25[mm]', 'Tab thickness');
model.param.set('Itab', '10[mm]', 'Shifted position of tabs');
model.param.set('F', '96487[C/mol]', 'Farday constant');
model.param.set('R', '8.3143[J/mol/K]', 'Gas constant');
model.param.set('n', '1', 'Number of electrons');
model.param.set('Nlayer', '40', 'Layers of electrodes');
model.param.set('av', '10^7[m^-1]', 'Specific interfacial area per unit volume (From Newman book problem 22.1) ** changed for reaction distribution **');
model.param.set('Tinf', [num2str(Tinf) '[degC]'], 'Room temperature');
model.param.set('Cpel', [num2str(Cpel) '[J/m^3/K]'], 'Heat capacitance of the solid phase  (Srinivasan & Wang)');
model.param.set('Cpcc', [num2str(Cpcc) '[J/m^3/K]'], '(Srinivasan & Wang) 700 [J/kg/K]');
model.param.set('keff', [num2str(keff) '[W/m/K]'], 'Thermal conductivity of separator (Srinivasan & Wang)');
model.param.set('h1', [num2str(h1) '[W/m^2/K]'], 'convective coefficient ** fitting parameter **');
model.param.set('Qmax', '(20*3600/(200*150*4.8))[C/mm^3]', 'Capacity of battery');
model.param.set('Crate', '4', 'C-rate');
model.param.set('iapp', '20[A]*Crate/(Wtab*Ltab*13)', 'Current density');
model.param.set('ku', [num2str(ku) '[V]'], 'Slope of OCV curve');
model.param.set('keref', [num2str(keref) '[S/m]'], 'Ionic conductivity at Tinf');
model.param.set('alfa_ke', [num2str(alfa_ke) '[S/m/K]'], 'Temp dependence of keref');
model.param.set('i0ref', [num2str(i0ref) '[A/m^2]'], 'Exch current dens at Tinf');
model.param.set('Ei0', [num2str(Ei0) '[kJ/mol]'], 'Temp dependence of Ei0 (also act.nrg)');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 3);

model.result.table.create('tbl1', 'Table');

model.func.create('wv1', 'Wave');
model.func('wv1').set('type', 'square');
model.func('wv1').set('freq', '2*pi*.01');
model.func('wv1').set('phase', '2*pi/100*.05');

model.component('comp1').mesh.create('mesh2');

model.component('comp1').geom('geom1').lengthUnit('mm');
model.component('comp1').geom('geom1').repairTolType('relative');
model.component('comp1').geom('geom1').create('blk1', 'Block');
model.component('comp1').geom('geom1').feature('blk1').label('Anode');
model.component('comp1').geom('geom1').feature('blk1').set('axis', [0 0 1]);
model.component('comp1').geom('geom1').feature('blk1').set('size', {'Lx' 'Ly' 'Lz'});
model.component('comp1').geom('geom1').create('blk2', 'Block');
model.component('comp1').geom('geom1').feature('blk2').label('Anode CC');
model.component('comp1').geom('geom1').feature('blk2').set('pos', {'-Lcc' '0' '0'});
model.component('comp1').geom('geom1').feature('blk2').set('axis', [0 0 1]);
model.component('comp1').geom('geom1').feature('blk2').set('size', {'Lcc' 'Ly' 'Lz'});
model.component('comp1').geom('geom1').create('blk3', 'Block');
model.component('comp1').geom('geom1').feature('blk3').label('Cathode');
model.component('comp1').geom('geom1').feature('blk3').set('pos', {'Lx' '0' '0'});
model.component('comp1').geom('geom1').feature('blk3').set('axis', [0 0 1]);
model.component('comp1').geom('geom1').feature('blk3').set('size', {'Lx' 'Ly' 'Lz'});
model.component('comp1').geom('geom1').create('blk4', 'Block');
model.component('comp1').geom('geom1').feature('blk4').label('Cathode CC');
model.component('comp1').geom('geom1').feature('blk4').set('pos', {'Lx*2' '0' '0'});
model.component('comp1').geom('geom1').feature('blk4').set('axis', [0 0 1]);
model.component('comp1').geom('geom1').feature('blk4').set('size', {'Lcc' 'Ly' 'Lz'});
model.component('comp1').geom('geom1').create('wp1', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp1').set('quickz', 'Lz');
model.component('comp1').geom('geom1').feature('wp1').set('showcoincident', false);
model.component('comp1').geom('geom1').feature('wp1').set('showintersection', false);
model.component('comp1').geom('geom1').feature('wp1').set('workplane3d', true);
model.component('comp1').geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r1').set('pos', {'-Lcc' 'Itab'});
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r1').set('size', {'Ltab' 'Wtab'});
model.component('comp1').geom('geom1').create('ext1', 'Extrude');
model.component('comp1').geom('geom1').feature('ext1').label('Anode CC tab');
model.component('comp1').geom('geom1').feature('ext1').setIndex('distance', 'Htab', 0);
model.component('comp1').geom('geom1').feature('ext1').selection('input').set({'wp1'});
model.component('comp1').geom('geom1').create('wp2', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp2').set('quickz', 'Lz');
model.component('comp1').geom('geom1').feature('wp2').set('showcoincident', false);
model.component('comp1').geom('geom1').feature('wp2').set('showintersection', false);
model.component('comp1').geom('geom1').feature('wp2').set('workplane3d', true);
model.component('comp1').geom('geom1').feature('wp2').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('r1').set('pos', {'2*Lx+(Lcc-Ltab)' 'Ly-Wtab-Itab'});
model.component('comp1').geom('geom1').feature('wp2').geom.feature('r1').set('size', {'Ltab' 'Wtab'});
model.component('comp1').geom('geom1').create('ext2', 'Extrude');
model.component('comp1').geom('geom1').feature('ext2').label('Cathode CC tab 1');
model.component('comp1').geom('geom1').feature('ext2').setIndex('distance', 'Htab', 0);
model.component('comp1').geom('geom1').feature('ext2').selection('input').set({'wp2'});
model.component('comp1').geom('geom1').create('wp3', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp3').set('quickz', 'Lz+Htab');
model.component('comp1').geom('geom1').feature('wp3').set('showcoincident', false);
model.component('comp1').geom('geom1').feature('wp3').set('showintersection', false);
model.component('comp1').geom('geom1').feature('wp3').set('workplane3d', true);
model.component('comp1').geom('geom1').feature('wp3').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp3').geom.feature('r1').set('pos', {'-Lcc-Ltab*12' 'Itab'});
model.component('comp1').geom('geom1').feature('wp3').geom.feature('r1').set('size', {'Ltab*13' 'Wtab'});
model.component('comp1').geom('geom1').create('ext3', 'Extrude');
model.component('comp1').geom('geom1').feature('ext3').label('Anode Copper Bar');
model.component('comp1').geom('geom1').feature('ext3').setIndex('distance', '6[in]', 0);
model.component('comp1').geom('geom1').feature('ext3').selection('input').set({'wp3'});
model.component('comp1').geom('geom1').create('wp4', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 'Lz+Htab');
model.component('comp1').geom('geom1').feature('wp4').set('showcoincident', false);
model.component('comp1').geom('geom1').feature('wp4').set('showintersection', false);
model.component('comp1').geom('geom1').feature('wp4').set('workplane3d', true);
model.component('comp1').geom('geom1').feature('wp4').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('r1').set('pos', {'2*Lx+(Lcc-Ltab)-Ltab*12' 'Ly-Wtab-Itab'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('r1').set('size', {'Ltab*13' 'Wtab'});
model.component('comp1').geom('geom1').create('ext4', 'Extrude');
model.component('comp1').geom('geom1').feature('ext4').label('Cathode Copper Bar');
model.component('comp1').geom('geom1').feature('ext4').setIndex('distance', '6[in]', 0);
model.component('comp1').geom('geom1').feature('ext4').selection('input').set({'wp4'});
model.component('comp1').geom('geom1').feature('fin').label('Form Assembly');
model.component('comp1').geom('geom1').feature('fin').set('action', 'assembly');
model.component('comp1').geom('geom1').feature('fin').set('repairtoltype', 'relative');
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('kappa_s', '(1e7)*Nlayer^2[S/m]', 'Electrical conductivity');
model.component('comp1').variable('var1').set('ks', '380[W/m/K]', 'Thermal conductivity');
model.component('comp1').variable('var1').selection.geom('geom1', 3);
model.component('comp1').variable('var1').selection.set([2 3]);
model.component('comp1').variable.create('var2');
model.component('comp1').variable('var2').set('ik', 'i0*n*F/R/T*(Phis-Phie-ku*q-0.01*wv1(root.t[1/s]))');
model.component('comp1').variable('var2').set('kappa_s', '(Nlayer^2)/0.01[m/S]', 'LiC6 conductivity (M. Doyle and Y. Fuentes JECS 2003)');
model.component('comp1').variable('var2').set('kappa_e', 'keref+(T-Tinf)*alfa_ke');
model.component('comp1').variable('var2').set('i0', 'i0ref*exp(-Ei0/R*(1/T-1/Tinf))');
model.component('comp1').variable('var2').set('DelSrxn', [num2str(-DS) '[mV/K]*n*F']);
model.component('comp1').variable('var2').selection.geom('geom1', 3);
model.component('comp1').variable('var2').selection.set([4]);
model.component('comp1').variable.create('var3');
model.component('comp1').variable('var3').set('ik', 'i0*n*F/R/T*(Phis-Phie-ku*q+0.01*wv1(root.t[1/s]))');
model.component('comp1').variable('var3').set('kappa_s', '(Nlayer^2)/0.01[m/S]', 'LiC6 conductivity (M. Doyle and Y. Fuentes JECS 2003)');
model.component('comp1').variable('var3').set('kappa_e', 'keref+(T-Tinf)*alfa_ke');
model.component('comp1').variable('var3').set('i0', 'i0ref*exp(-Ei0/R*(1/T-1/Tinf))');
model.component('comp1').variable('var3').set('DelSrxn', [num2str(DS) '[mV/K]*n*F']);
model.component('comp1').variable('var3').selection.geom('geom1', 3);
model.component('comp1').variable('var3').selection.set([6]);
model.component('comp1').variable.create('var4');
model.component('comp1').variable('var4').set('kappa_s', '(1e7)*Nlayer^2[S/m]');
model.component('comp1').variable('var4').set('ks', '380[W/m/K]', 'Thermal conductivity of anode (Srinivasan & Wang: 200W/m/K)');
model.component('comp1').variable('var4').selection.geom('geom1', 3);
model.component('comp1').variable('var4').selection.set([7 8]);
model.component('comp1').variable.create('var5');
model.component('comp1').variable('var5').set('kappa_s', '(6e7)*Nlayer^2[S/m]');
model.component('comp1').variable('var5').set('ks', '380[W/m/K]', 'Thermal conductivity of anode (Srinivasan & Wang: 200W/m/K)');
model.component('comp1').variable('var5').selection.geom('geom1', 3);
model.component('comp1').variable('var5').selection.set([1 5]);

model.component('comp1').physics.create('g', 'GeneralFormPDE', 'geom1');
model.component('comp1').physics('g').field('dimensionless').component({'Phis'});
model.component('comp1').physics('g').create('flux1', 'FluxBoundary', 2);
model.component('comp1').physics('g').feature('flux1').selection.set([4]);
model.component('comp1').physics('g').create('flux2', 'FluxBoundary', 2);
model.component('comp1').physics('g').feature('flux2').selection.set([10 40]);
model.component('comp1').physics('g').create('cont1', 'Continuity', 2);
model.component('comp1').physics('g').create('cont2', 'Continuity', 2);
model.component('comp1').physics('g').create('cont3', 'Continuity', 2);
model.component('comp1').physics('g').create('cont4', 'Continuity', 2);
model.component('comp1').physics('g').create('cont5', 'Continuity', 2);
model.component('comp1').physics('g').create('cont6', 'Continuity', 2);
model.component('comp1').physics('g').create('gfeq2', 'GeneralFormPDE', 3);
model.component('comp1').physics('g').feature('gfeq2').selection.set([2 7]);
model.component('comp1').physics('g').create('dir1', 'DirichletBoundary', 2);
model.component('comp1').physics('g').feature('dir1').selection.set([28]);
model.component('comp1').physics('g').create('gfeq3', 'GeneralFormPDE', 3);
model.component('comp1').physics('g').feature('gfeq3').selection.set([1 3 5 8]);
model.component('comp1').physics.create('g2', 'GeneralFormPDE', 'geom1');
model.component('comp1').physics('g2').field('dimensionless').component({'Phie'});
model.component('comp1').physics('g2').selection.set([4 6]);
model.component('comp1').physics('g2').create('cont1', 'Continuity', 2);
model.component('comp1').physics.create('g3', 'GeneralFormPDE', 'geom1');
model.component('comp1').physics('g3').field('dimensionless').component({'T'});
model.component('comp1').physics('g3').create('flux1', 'FluxBoundary', 2);
model.component('comp1').physics('g3').feature('flux1').selection.set([3 4 6 7 8 9 10 11 13 14 17 18 20 21 22 23 27 28 30 32 33 34 35 38 39 40 41 42 43 44 47 48]);
model.component('comp1').physics('g3').create('gfeq2', 'GeneralFormPDE', 3);
model.component('comp1').physics('g3').feature('gfeq2').selection.set([2 7]);
model.component('comp1').physics('g3').create('cont1', 'Continuity', 2);
model.component('comp1').physics('g3').create('cont2', 'Continuity', 2);
model.component('comp1').physics('g3').create('cont3', 'Continuity', 2);
model.component('comp1').physics('g3').create('cont4', 'Continuity', 2);
model.component('comp1').physics('g3').create('cont5', 'Continuity', 2);
model.component('comp1').physics('g3').create('cont6', 'Continuity', 2);
model.component('comp1').physics('g3').create('cont7', 'Continuity', 2);
model.component('comp1').physics('g3').create('gfeq3', 'GeneralFormPDE', 3);
model.component('comp1').physics('g3').feature('gfeq3').selection.set([1 3 5 8]);
model.component('comp1').physics.create('g4', 'GeneralFormPDE', 'geom1');
model.component('comp1').physics('g4').field('dimensionless').component({'q'});
model.component('comp1').physics('g4').selection.set([4 6]);

model.component('comp1').mesh('mesh2').create('ftet2', 'FreeTet');
model.component('comp1').mesh('mesh2').create('ftet3', 'FreeTet');
model.component('comp1').mesh('mesh2').feature('ftet2').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh2').feature('ftet2').selection.set([1 2 3 5 7 8]);

model.result.table('tbl1').comments('Point Evaluation 1 (Phis)');

model.component('comp1').variable('var1').label('Variables CC - Cu');
model.component('comp1').variable('var2').label('Variables Anode');
model.component('comp1').variable('var3').label('Variables Cathode');
model.component('comp1').variable('var4').label('Variables CC - Al');
model.component('comp1').variable('var5').label('Variables Copper');

model.component('comp1').view('view1').set('showlabels', true);
model.component('comp1').view('view1').set('showDirections', true);
model.component('comp1').view('view1').set('showgrid', false);
model.component('comp1').view('view1').set('scenelight', false);
model.component('comp1').view('view2').axis.set('xmin', -108.86249542236328);
model.component('comp1').view('view2').axis.set('xmax', 114.26250457763672);
model.component('comp1').view('view2').axis.set('ymin', -7.5);
model.component('comp1').view('view2').axis.set('ymax', 157.5);
model.component('comp1').view('view2').axis.set('abstractviewlratio', -17.49394989013672);
model.component('comp1').view('view2').axis.set('abstractviewrratio', 17.49395179748535);
model.component('comp1').view('view2').axis.set('abstractviewbratio', -0.05000000074505806);
model.component('comp1').view('view2').axis.set('abstractviewtratio', 0.05000000074505806);
model.component('comp1').view('view2').axis.set('abstractviewxscale', 0.17045454680919647);
model.component('comp1').view('view2').axis.set('abstractviewyscale', 0.17045454680919647);

model.component('comp1').physics('g').label('Phis');
model.component('comp1').physics('g').prop('Units').set('DependentVariableQuantity', 'electricpotential');
model.component('comp1').physics('g').prop('Units').set('SourceTermQuantity', 'currentsource');
model.component('comp1').physics('g').feature('gfeq1').set('f', '-av*ik');
model.component('comp1').physics('g').feature('gfeq1').set('Ga', {'-kappa_s*Phisx' '-kappa_s*Phisy/Nlayer^2' '-kappa_s*Phisz/Nlayer^2'});
model.component('comp1').physics('g').feature('gfeq1').set('da', 0);
model.component('comp1').physics('g').feature('init1').set('Phis', num2str(Vinit));
model.component('comp1').physics('g').feature('flux1').set('g', 'wv1(root.t[1/s])*iapp');
model.component('comp1').physics('g').feature('flux1').label('Current Source');
model.component('comp1').physics('g').feature('cont1').set('pairs', 'ap1');
model.component('comp1').physics('g').feature('cont2').set('pairs', 'ap2');
model.component('comp1').physics('g').feature('cont3').set('pairs', 'ap3');
model.component('comp1').physics('g').feature('cont4').set('pairs', 'ap5');
model.component('comp1').physics('g').feature('cont5').set('pairs', 'ap6');
model.component('comp1').physics('g').feature('cont6').set('pairs', 'ap7');
model.component('comp1').physics('g').feature('gfeq2').set('f', 0);
model.component('comp1').physics('g').feature('gfeq2').set('Ga', {'-kappa_s*Phisx' '-kappa_s*Phisy/Nlayer^2' '-kappa_s*Phisz/Nlayer^2'});
model.component('comp1').physics('g').feature('gfeq2').set('da', 0);
model.component('comp1').physics('g').feature('dir1').set('r', num2str(Vinit));
model.component('comp1').physics('g').feature('gfeq3').set('f', 0);
model.component('comp1').physics('g').feature('gfeq3').set('Ga', {'-kappa_s*Phisx/Nlayer^2' '-kappa_s*Phisy/Nlayer^2' '-kappa_s*Phisz/Nlayer^2'});
model.component('comp1').physics('g').feature('gfeq3').set('da', 0);
model.component('comp1').physics('g2').label('Phie');
model.component('comp1').physics('g2').prop('Units').set('DependentVariableQuantity', 'electricpotential');
model.component('comp1').physics('g2').prop('Units').set('SourceTermQuantity', 'currentsource');
model.component('comp1').physics('g2').feature('gfeq1').set('f', 'av*ik');
model.component('comp1').physics('g2').feature('gfeq1').set('Ga', {'-kappa_e*Phiex' '-kappa_e*Phiey/Nlayer^2' '-kappa_e*Phiez/Nlayer^2'});
model.component('comp1').physics('g2').feature('gfeq1').set('da', 0);
model.component('comp1').physics('g2').feature('init1').set('Phie', num2str(Vinit));
model.component('comp1').physics('g2').feature('cont1').set('pairs', 'ap4');
model.component('comp1').physics('g3').label('T');
model.component('comp1').physics('g3').prop('Units').set('DependentVariableQuantity', 'temperature');
model.component('comp1').physics('g3').prop('Units').set('SourceTermQuantity', 'powerdensity');
model.component('comp1').physics('g3').feature('gfeq1').set('f', 'kappa_s*(Phisx^2+Phisy^2/Nlayer^2+Phisz^2/Nlayer^2) +kappa_e*(Phiex^2+Phiey^2/Nlayer^2+Phiez^2/Nlayer^2)+av*R*T/(i0*n*F)*ik^2-av*T*DelSrxn/n/F*ik');
model.component('comp1').physics('g3').feature('gfeq1').set('Ga', {'-keff*Tx' '-keff*Ty' '-keff*Tz'});
model.component('comp1').physics('g3').feature('gfeq1').set('da', 'Cpel');
model.component('comp1').physics('g3').feature('init1').set('T', 'Tinf');
model.component('comp1').physics('g3').feature('init1').set('Tt', 1);
model.component('comp1').physics('g3').feature('flux1').set('g', '-h1*(T-Tinf)');
model.component('comp1').physics('g3').feature('gfeq2').set('f', 'kappa_s*(Phisx^2+Phisy^2/Nlayer^2+Phisz^2/Nlayer^2)');
model.component('comp1').physics('g3').feature('gfeq2').set('Ga', {'-ks*Tx' '-ks*Ty' '-ks*Tz'});
model.component('comp1').physics('g3').feature('gfeq2').set('da', 'Cpcc');
model.component('comp1').physics('g3').feature('cont1').set('pairs', 'ap1');
model.component('comp1').physics('g3').feature('cont2').set('pairs', 'ap2');
model.component('comp1').physics('g3').feature('cont3').set('pairs', 'ap3');
model.component('comp1').physics('g3').feature('cont4').set('pairs', 'ap4');
model.component('comp1').physics('g3').feature('cont5').set('pairs', 'ap5');
model.component('comp1').physics('g3').feature('cont6').set('pairs', 'ap6');
model.component('comp1').physics('g3').feature('cont7').set('pairs', 'ap7');
model.component('comp1').physics('g3').feature('gfeq3').set('f', 'kappa_s*(Phisx^2/Nlayer^2+Phisy^2/Nlayer^2+Phisz^2/Nlayer^2)');
model.component('comp1').physics('g3').feature('gfeq3').set('Ga', {'-ks*Tx' '-ks*Ty' '-ks*Tz'});
model.component('comp1').physics('g3').feature('gfeq3').set('da', 'Cpcc');
model.component('comp1').physics('g4').label('q');
model.component('comp1').physics('g4').prop('Units').set('CustomSourceTermUnit', 's^-1');
model.component('comp1').physics('g4').feature('gfeq1').set('f', 'av*ik/Qmax');
model.component('comp1').physics('g4').feature('gfeq1').set('Ga', [0 0 0]);
model.component('comp1').physics('g4').feature('init1').set('q', 0.2722);
model.component('comp1').physics('g4').feature('init1').set('qt', 0.001);

model.component('comp1').mesh('mesh2').label('Mesh 1');
model.component('comp1').mesh('mesh2').feature('size').set('hauto', 8);
model.component('comp1').mesh('mesh2').feature('ftet2').set('xscale', 10);
model.component('comp1').mesh('mesh2').feature('ftet3').set('xscale', 2);
model.component('comp1').mesh('mesh2').run;

model.study.create('std1');
model.study('std1').create('time', 'Transient');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').create('ss4', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature.remove('fcDef');

model.result.dataset.create('cpt1', 'CutPoint3D');
model.result.dataset.create('cpt2', 'CutPoint3D');
model.result.dataset.create('cpt3', 'CutPoint3D');
model.result.dataset.create('cpt4', 'CutPoint3D');
model.result.dataset.create('cln1', 'CutLine3D');
model.result.numerical.create('pev3', 'EvalPoint');
model.result.numerical.create('av1', 'AvSurface');
model.result.numerical.create('pev2', 'EvalPoint');
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical.create('pev4', 'EvalPoint');
model.result.numerical('pev3').set('probetag', 'none');
model.result.numerical('av1').selection.set([7]);
model.result.numerical('av1').set('probetag', 'none');
model.result.numerical('pev2').set('probetag', 'none');
model.result.numerical('pev1').set('probetag', 'none');
model.result.numerical('pev4').set('probetag', 'none');
model.result.create('pg1', 'PlotGroup3D');
model.result.create('pg2', 'PlotGroup1D');
model.result.create('pg3', 'PlotGroup1D');
model.result.create('pg4', 'PlotGroup1D');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg1').create('vol1', 'Volume');
model.result('pg1').create('con1', 'Contour');
model.result('pg1').create('arwv1', 'ArrowVolume');
model.result('pg2').create('tblp1', 'Table');
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('xdata', 'expr');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('xdata', 'expr');
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('xdata', 'expr');
model.result.export.create('tbl1', 'Table');
model.result.export.create('img1', 'Image3D');

model.study('std1').feature('time').set('tlist', 'range(0,1,2500)');
model.study('std1').feature('time').set('usertol', true);
model.study('std1').feature('time').set('rtol', '1e-3');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('v1').set('clist', {'range(0,1,2500)' '2.5[s]'});
model.sol('sol1').feature('t1').set('tlist', 'range(0,1,2500)');
model.sol('sol1').feature('t1').set('rtol', '1e-3');
model.sol('sol1').feature('t1').feature('dDef').set('ooc', false);
model.sol('sol1').feature('t1').feature('se1').active(false);
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Phis'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Phie'});
model.sol('sol1').feature('t1').feature('se1').feature('ss3').set('segvar', {'comp1_T'});
model.sol('sol1').feature('t1').feature('se1').feature('ss4').set('segvar', {'comp1_q'});
model.sol('sol1').feature('t1').feature('fc1').active(true);
model.sol('sol1').runAll;

model.result.dataset('cpt1').label('Voltage');
model.result.dataset('cpt1').set('pointx', '-Lcc');
model.result.dataset('cpt1').set('pointy', '1/4*Ly');
model.result.dataset('cpt1').set('pointz', 'Lz+Htab+6[in]');
model.result.dataset('cpt2').label('Cold Spot');
model.result.dataset('cpt2').set('pointx', '-Lcc');
model.result.dataset('cpt2').set('pointy', 'Ly-25');
model.result.dataset('cpt2').set('pointz', 'Lz-155');
model.result.dataset('cpt2').set('pointvar', 'cpt1n');
model.result.dataset('cpt3').label('Hot Spot');
model.result.dataset('cpt3').set('pointx', '-Lcc');
model.result.dataset('cpt3').set('pointy', 'Ly-75');
model.result.dataset('cpt3').set('pointz', 'Lz-30');
model.result.dataset('cpt3').set('pointvar', 'cpt1n');
model.result.dataset('cpt4').label('Copper Bar');
model.result.dataset('cpt4').set('pointx', '-Ltab*13');
model.result.dataset('cpt4').set('pointy', '1/4*Ly');
model.result.dataset('cpt4').set('pointz', 'Lz+Htab+4[in]');
model.result.dataset('cpt4').set('pointvar', 'cpt1n');
model.result.dataset('cln1').label('Cut Line 3D z=L');
model.result.dataset('cln1').set('genpoints', {'-Lcc' 'Ly/2' 'Lz'; '2*Lx+Lcc' 'Ly/2' 'Lz'});
model.result.numerical('pev3').label('Hot');
model.result.numerical('pev3').set('data', 'cpt3');
model.result.numerical('pev3').set('table', 'tbl1');
model.result.numerical('pev3').set('expr', {'T'});
model.result.numerical('pev3').set('unit', {'degC'});
model.result.numerical('pev3').set('descr', {''});
model.result.numerical('av1').label('Surf. Avg');
model.result.numerical('av1').set('table', 'tbl1');
model.result.numerical('av1').set('expr', {'T'});
model.result.numerical('av1').set('unit', {'degC'});
model.result.numerical('av1').set('descr', {''});
model.result.numerical('pev2').label('Cold');
model.result.numerical('pev2').set('data', 'cpt2');
model.result.numerical('pev2').set('table', 'tbl1');
model.result.numerical('pev2').set('expr', {'T'});
model.result.numerical('pev2').set('unit', {'degC'});
model.result.numerical('pev2').set('descr', {''});
model.result.numerical('pev1').label('Voltage');
model.result.numerical('pev1').set('data', 'cpt1');
model.result.numerical('pev1').set('table', 'tbl1');
model.result.numerical('pev1').set('expr', {'Phis'});
model.result.numerical('pev1').set('unit', {'V'});
model.result.numerical('pev1').set('descr', {''});
model.result.numerical('pev4').label('Copper');
model.result.numerical('pev4').set('data', 'cpt4');
model.result.numerical('pev4').set('table', 'tbl1');
model.result.numerical('pev4').set('expr', {'T'});
model.result.numerical('pev4').set('unit', {'degC'});
model.result.numerical('pev4').set('descr', {''});
model.result.numerical('pev3').setResult;
model.result.numerical('av1').appendResult;
model.result.numerical('pev2').appendResult;
model.result.numerical('pev1').appendResult;
model.result.numerical('pev4').appendResult;
model.result('pg1').label('T');
model.result('pg1').feature('vol1').set('expr', 'T');
model.result('pg1').feature('vol1').set('unit', 'degC');
model.result('pg1').feature('vol1').set('descr', 'Dependent variable T');
model.result('pg1').feature('vol1').set('colortable', 'HeatCamera');
model.result('pg1').feature('vol1').set('resolution', 'normal');
model.result('pg1').feature('con1').set('expr', 'T');
model.result('pg1').feature('con1').set('unit', 'degC');
model.result('pg1').feature('con1').set('descr', 'Dependent variable T');
model.result('pg1').feature('con1').set('colortable', 'Twilight');
model.result('pg1').feature('con1').set('resolution', 'normal');
model.result('pg1').feature('arwv1').active(false);
model.result('pg1').feature('arwv1').set('xnumber', 8);
model.result('pg1').feature('arwv1').set('znumber', 21);
model.result('pg1').feature('arwv1').set('scale', 15.39415593000903);
model.result('pg1').feature('arwv1').set('scaleactive', false);
model.result('pg2').label('Table Plot');
model.result('pg2').set('xlabel', 'Time (s)');
model.result('pg2').set('xlabelactive', false);
model.result('pg2').feature('tblp1').set('plotcolumninput', 'manual');
model.result('pg3').label('Phie');
model.result('pg3').set('xlabel', 'x-coordinate (mm)');
model.result('pg3').set('ylabel', 'Dependent variable Phie (V)');
model.result('pg3').set('xlabelactive', false);
model.result('pg3').set('ylabelactive', false);
model.result('pg3').feature('lngr1').set('data', 'cln1');
model.result('pg3').feature('lngr1').set('looplevelinput', {'manualindices'});
model.result('pg3').feature('lngr1').set('looplevelindices', {'range(51,10,100)'});
model.result('pg3').feature('lngr1').set('expr', 'Phie');
model.result('pg3').feature('lngr1').set('descr', 'Dependent variable Phie');
model.result('pg3').feature('lngr1').set('xdataexpr', 'x');
model.result('pg3').feature('lngr1').set('xdataunit', 'mm');
model.result('pg3').feature('lngr1').set('xdatadescr', 'x-coordinate');
model.result('pg3').feature('lngr1').set('resolution', 'normal');
model.result('pg4').label('ik');
model.result('pg4').set('xlabel', 'x-coordinate (mm)');
model.result('pg4').set('xlabelactive', false);
model.result('pg4').feature('lngr1').set('data', 'cln1');
model.result('pg4').feature('lngr1').set('looplevelinput', {'all'});
model.result('pg4').feature('lngr1').set('expr', 'ik');
model.result('pg4').feature('lngr1').set('unit', 'A/m^2');
model.result('pg4').feature('lngr1').set('xdataexpr', 'x');
model.result('pg4').feature('lngr1').set('xdataunit', 'mm');
model.result('pg4').feature('lngr1').set('xdatadescr', 'x-coordinate');
model.result('pg4').feature('lngr1').set('resolution', 'normal');
model.result('pg5').label('SOC');
model.result('pg5').set('looplevelinput', {'first'});
model.result('pg5').set('xlabel', 'x-coordinate (mm)');
model.result('pg5').set('ylabel', 'Dependent variable q (1)');
model.result('pg5').set('xlabelactive', false);
model.result('pg5').set('ylabelactive', false);
model.result('pg5').feature('lngr1').set('data', 'cln1');
model.result('pg5').feature('lngr1').set('looplevelinput', {'all'});
model.result('pg5').feature('lngr1').set('expr', 'q');
model.result('pg5').feature('lngr1').set('unit', '1');
model.result('pg5').feature('lngr1').set('descr', 'Dependent variable q');
model.result('pg5').feature('lngr1').set('xdataexpr', 'x');
model.result('pg5').feature('lngr1').set('xdataunit', 'mm');
model.result('pg5').feature('lngr1').set('xdatadescr', 'x-coordinate');
model.result('pg5').feature('lngr1').set('resolution', 'normal');
model.result.export('tbl1').set('filename', '/Users/howiechu/Box Sync/HNC/Oxford/Thermal Model Paper/Code/Run_4c_100s.txt');
model.result.export('tbl1').set('header', false);
model.result.export('img1').set('view', 'view1');
model.result.export('img1').set('webwidth', 800);
model.result.export('img1').set('webheight', 500);
model.result.export('img1').set('webresolution', 300);
model.result.export('img1').set('sizedesc', '68 x 42 mm');
model.result.export('img1').set('pngfilename', '/Users/howiechu/Box Sync/HNC/Oxford/Thermal Model Paper/Code/ModImg.png');
model.result.export('img1').set('options', true);
model.result.export('img1').set('fontsize', 18);
model.result.export('img1').set('printunit', 'in');
model.result.export('img1').set('webunit', 'px');
model.result.export('img1').set('printheight', '6');
model.result.export('img1').set('webheight', '500');
model.result.export('img1').set('printwidth', '6');
model.result.export('img1').set('webwidth', '800');
model.result.export('img1').set('printlockratio', 'off');
model.result.export('img1').set('weblockratio', 'off');
model.result.export('img1').set('printresolution', '600');
model.result.export('img1').set('webresolution', '300');
model.result.export('img1').set('size', 'manualweb');
model.result.export('img1').set('antialias', 'on');
model.result.export('img1').set('zoomextents', 'off');
model.result.export('img1').set('title', 'on');
model.result.export('img1').set('legend', 'on');
model.result.export('img1').set('logo', 'off');
model.result.export('img1').set('options', 'on');
model.result.export('img1').set('fontsize', '18');
model.result.export('img1').set('customcolor', [1 1 1]);
model.result.export('img1').set('background', 'transparent');
model.result.export('img1').set('axisorientation', 'off');
model.result.export('img1').set('grid', 'off');
model.result.export('img1').set('qualitylevel', '92');
model.result.export('img1').set('qualityactive', 'off');
model.result.export('img1').set('imagetype', 'png');
model.result.export('tbl1').run
model.result.export('img1').run
